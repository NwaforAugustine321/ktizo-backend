"""“license_refactoring”

Revision ID: b33fcfcb6329
Revises: d00e94f74bf3
Create Date: 2023-01-18 19:53:15.735541

"""
import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b33fcfcb6329'
down_revision = 'd00e94f74bf3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('licence', sa.Column('project_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=True))
    op.add_column('licence', sa.Column('percentage', sa.Integer(), nullable=True))
    op.add_column('licence', sa.Column('writers', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('licence', sa.Column('publishers', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('licence', sa.Column('fee', sa.Integer(), nullable=True))
    op.add_column('licence', sa.Column('supervisor_invoice_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.create_foreign_key(None, 'licence', 'project', ['project_id'], ['id'], ondelete='cascade')
    op.drop_column('licence', 'direct_performancefee')
    op.drop_column('licence', 'performance_fee')
    op.drop_column('licence', 'to')
    op.drop_column('licence', 'master_recording')
    op.drop_column('licence', 'onetime_fee')
    op.drop_column('licence', 'search_trackid')
    op.drop_column('licence', 'reachedat_email')
    op.drop_column('licence', 'sync_licencefee')
    op.drop_column('licence', 'master_licencefee')
    op.drop_column('licence', 'reached_at')
    op.drop_column('licence', 'written_by')
    op.drop_column('licence', 'tv_show')
    op.drop_column('licence', 'producer')
    op.drop_column('licence', 'search_artistid')
    op.drop_column('licence', 'licensor')
    op.drop_column('licence', 'performed_by')
    op.drop_column('licence', 'show_description')
    op.drop_column('licence', 'published_by')
    op.add_column('project', sa.Column('project_type', sa.String(length=255), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('project', 'project_type')
    op.add_column('licence', sa.Column('published_by', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('show_description', sa.VARCHAR(length=2000), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('performed_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('licensor', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('search_artistid', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('producer', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('tv_show', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('written_by', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('reached_at', sa.VARCHAR(length=1000), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('master_licencefee', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('sync_licencefee', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('reachedat_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('search_trackid', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('onetime_fee', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('master_recording', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('to', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('performance_fee', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('licence', sa.Column('direct_performancefee', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'licence', type_='foreignkey')
    op.drop_column('licence', 'supervisor_invoice_info')
    op.drop_column('licence', 'fee')
    op.drop_column('licence', 'publishers')
    op.drop_column('licence', 'writers')
    op.drop_column('licence', 'percentage')
    op.drop_column('licence', 'project_id')
    # ### end Alembic commands ###
